name: Publish to PyPI

on:
  push:
    branches:
      - master  # Trigger on pushes to the master branch
  release:
    types: [created]
  workflow_dispatch:  # Allow manual trigger

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0  # Fetch all history for all tags and branches
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install setuptools wheel twine setuptools_scm
    - name: Get current version
      id: current_version
      run: echo "::set-output name=version::$(python setup.py --version)"
    - name: Bump version and push tag
      id: bump_version
      run: |
        # Parse the current version
        IFS='.' read -ra VERSION_PARTS <<< "${{ steps.current_version.outputs.version }}"
        MAJOR=${VERSION_PARTS[0]}
        MINOR=${VERSION_PARTS[1]}
        PATCH=${VERSION_PARTS[2]}
        # Increment patch version
        NEW_PATCH=$((PATCH + 1))
        NEW_VERSION="$MAJOR.$MINOR.$NEW_PATCH"
        # Create and push new tag
        git config user.name github-actions
        git config user.email github-actions@github.com
        git tag -a v$NEW_VERSION -m "Version $NEW_VERSION"
        git push origin v$NEW_VERSION
        echo "::set-output name=new_version::$NEW_VERSION"
    - name: Build and publish
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
      run: |
        python setup.py sdist bdist_wheel
        twine check dist/*
        twine upload dist/*